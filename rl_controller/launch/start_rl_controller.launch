<launch>
    <arg name="uuv_name"/>
    <arg name="model_name" default="$(arg uuv_name)"/>
    <arg name="saturation" default="5000"/>

    <arg name="output_dir" default="$(find uuv_thruster_manager)/config/$(arg model_name)"/>
    <arg name="config_file" default="$(find uuv_thruster_manager)/config/$(arg model_name)/thruster_manager.yaml"/>
    <arg name="tam_file" default="$(find uuv_thruster_manager)/config/$(arg model_name)/TAM.yaml"/>
    
    <include file="$(find uuv_thruster_manager)/launch/thruster_manager.launch">
        <arg name="uuv_name" value="$(arg uuv_name)"/>
        <arg name="model_name" value="$(arg model_name)"/>
        <arg name="output_dir" value="$(arg output_dir)"/>
        <arg name="config_file" value="$(arg config_file)"/>
        <arg name="tam_file" value="$(arg tam_file)"/>
    </include>

    <group ns="$(arg uuv_name)">
        <node pkg="uuv_control_utils"
              type="trajectory_marker_publisher.py"
              name="trajectory_marker_publisher"
              output="screen">
            <remap from="trajectory" to="dp_controller/trajectory"/>
            <remap from="waypoints" to="dp_controller/waypoints"/>
        </node>

        <node pkg="rl_controller"
            type="rl_controller_node.py"
            name="rl_controller_node"
            output="screen"
            required="true">
            <remap from="odom" to="pose_gt"/>
            <remap from="trajectory" to="dp_controller/trajectory"/>
            <remap from="input_trajectory" to="dp_controller/input_trajectory"/>
            <remap from="waypoints" to="dp_controller/waypoints"/>
            <remap from="error" to="dp_controller/error"/>
            <remap from="reference" to="dp_controller/reference"/>
            <remap from="thruster_output" to="thruster_manager/input_stamped"/>
            <rosparam subst_value="true">
                saturation: $(arg saturation)
            </rosparam>
        </node>
    </group>

</launch>